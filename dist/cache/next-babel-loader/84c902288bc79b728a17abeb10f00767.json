{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.Container = Container;\nexports.createUrl = createUrl;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"../next-server/lib/utils\");\n\nexports.AppInitialProps = _utils.AppInitialProps;\n/**\n* `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n* This allows for keeping state between navigation, custom error handling, injecting additional data.\n*/\n\nfunction appGetInitialProps(_x) {\n  return _appGetInitialProps.apply(this, arguments);\n}\n\nfunction _appGetInitialProps() {\n  _appGetInitialProps = (0, _asyncToGenerator2.default)(function* (_ref) {\n    var {\n      Component,\n      ctx\n    } = _ref;\n    var pageProps = yield (0, _utils.loadGetInitialProps)(Component, ctx);\n    return {\n      pageProps\n    };\n  });\n  return _appGetInitialProps.apply(this, arguments);\n}\n\nclass App extends _react.default.Component {\n  // Kept here for backwards compatibility.\n  // When someone ended App they could call `super.componentDidCatch`.\n  // @deprecated This method is no longer needed. Errors are caught at the top level\n  componentDidCatch(error, _errorInfo) {\n    throw error;\n  }\n\n  render() {\n    var {\n      router,\n      Component,\n      pageProps\n    } = this.props;\n    var url = createUrl(router);\n    return _react.default.createElement(Component, (0, _extends2.default)({}, pageProps, {\n      url: url\n    }));\n  }\n\n}\n\nexports.default = App;\nApp.origGetInitialProps = appGetInitialProps;\nApp.getInitialProps = appGetInitialProps;\nvar warnContainer;\nvar warnUrl;\n\nif (false) {\n  warnContainer = (0, _utils.execOnce)(() => {\n    console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");\n  });\n  warnUrl = (0, _utils.execOnce)(() => {\n    console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");\n  });\n} // @deprecated noop for now until removal\n\n\nfunction Container(p) {\n  if (false) warnContainer();\n  return p.children;\n}\n\nfunction createUrl(router) {\n  // This is to make sure we don't references the router object at call time\n  var {\n    pathname,\n    asPath,\n    query\n  } = router;\n  return {\n    get query() {\n      if (false) warnUrl();\n      return query;\n    },\n\n    get pathname() {\n      if (false) warnUrl();\n      return pathname;\n    },\n\n    get asPath() {\n      if (false) warnUrl();\n      return asPath;\n    },\n\n    back: () => {\n      if (false) warnUrl();\n      router.back();\n    },\n    push: (url, as) => {\n      if (false) warnUrl();\n      return router.push(url, as);\n    },\n    pushTo: (href, as) => {\n      if (false) warnUrl();\n      var pushRoute = as ? href : '';\n      var pushUrl = as || href;\n      return router.push(pushRoute, pushUrl);\n    },\n    replace: (url, as) => {\n      if (false) warnUrl();\n      return router.replace(url, as);\n    },\n    replaceTo: (href, as) => {\n      if (false) warnUrl();\n      var replaceRoute = as ? href : '';\n      var replaceUrl = as || href;\n      return router.replace(replaceRoute, replaceUrl);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}